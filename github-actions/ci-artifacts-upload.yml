# name of pipeline workflow
name: ashu docker image pipeline

# when to run this job 
on: 
  push:
    branches: ["master1"]

# now we can write jobs 
jobs: 
  # name of first job 
  ashucode-check-build:
    runs-on: ubuntu-latest 
    steps: 
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Perform initial checks
      run: | 
        date 
        ls -a
        whoami 
        docker -v 
        docker-compose version 

    - name: Build and create using Docker Compose
      run: | 
        docker-compose down &>/dev/null
        docker-compose up -d --build 
        sleep 2
        docker-compose ps
    - name: Check if the container is running
      run: |
        curl -f http://localhost:1244/health.html 
        echo "seems like my container is running"
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: my-artifacts
        path: |
            . 
            !**/.git*
            !**/.dockerignore
            !**/compose.yaml
            !**/*.md

  ashu-build-pushdockerhub:
    runs-on: ubuntu-latest
    needs: ashucode-check-build  # Ensure this job runs after the first job
    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v3
      with:
        name: my-artifacts
        path: .
    # - name: Sets up Docker Buildx for building multi-platform images using 
    #   uses: docker/setup-buildx-action@v2

    - name:  checking all downloaded files
      run: ls -a
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }} 

    # - name: Sets up QEMU for emulating different CPU architectures using 
    #   uses: docker/setup-qemu-action@v2

    - name: Build and push image to Docker Hub
      uses: docker/build-push-action@v5
      with: 
        context: .
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/ashuweb:bmoplatformcpu
    # - name: docker creds logout 
    #   run: docker logout 
